- name: Setup Raspberry Pi
  hosts: laser
  become: true
  tasks:

    # Update packages
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    - name: Upgrade all packages
      apt:
        upgrade: dist
        update_cache: yes
        cache_valid_time: 3600

    # Install required packages
    - name: Install required packages
      apt:
        name:
          - xserver-xorg
          - xinit
          - screen
          - git
          - vim
          - plymouth
          - python3-pip
          - python3-opencv
          - python3-zmq
          - python3-pyqt5
          - python3-rpi-lgpio
          - watchdog
        update_cache: true

    - name: Create Python virtual environment
      command: python3 -m venv /home/kiosk/venv

    - name: Install DHT11 Python library in virtual environment
      pip:
        name: Adafruit_CircuitPython_DHT
        virtualenv: /home/kiosk/venv

    # Ensure Wayland is not used (skip removing Wayland libraries)
    - name: Disable Wayland by ensuring X11 is used
      lineinfile:
        path: /etc/environment
        line: "XDG_SESSION_TYPE=x11"
        state: present

    # Load v4l2loopback module
    - name: Load v4l2loopback kernel module
      modprobe:
        name: v4l2loopback
        params: "devices=2 video_nr=10,11 card_label='Loopback1 Loopback2' exclusive_caps=1"

    # Ensure v4l2loopback is loaded on boot
    - name: Ensure v4l2loopback loads on boot
      lineinfile:
        path: /etc/modules
        line: "v4l2loopback devices=2 video_nr=10,11 card_label='Loopback1,Loopback2' exclusive_caps=1"
        state: present

    # Configure X11 to stream video to loopback and display
    - name: Create .xinitrc to stream video to loopback and display
      copy:
        content: |
          #!/bin/bash
          ffmpeg -i /dev/video0 -f v4l2 /dev/video10 &
          exec ffplay /dev/video10
        dest: /root/.xinitrc
        mode: '0755'
        owner: root
        group: root

    - name: Create systemd service to start X11 and ffmpeg
      copy:
        content: |
          [Unit]
          Description=Start X11 and run ffmpeg
          After=multi-user.target

          [Service]
          ExecStart=/usr/bin/startx
          User=root
          WorkingDirectory=/root
          Restart=always

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/x11-ffmpeg.service
        mode: '0644'

    - name: Enable and start X11 ffmpeg service
      systemd:
        name: x11-ffmpeg.service
        enabled: true
        state: started

    # Configure config.txt for Raspberry Pisu
    - name: Overwrite /boot/config.txt with custom settings
      copy:
        dest: /boot/config.txt
        mode: '0644'
        content: |
          dtparam=i2c_arm=on
          auto_initramfs=1
          arm_64bit=1
          arm_boost=1
          disable_overscan=1
          disable_splash=0
          framebuffer_swap=0
          camera_auto_detect=1
          hdmi_force_hotplug=1
          hdmi_group=2
          hdmi_mode=87
          hdmi_cvt=800 480 60 6 0 0 0
          hdmi_drive=2
          dtoverlay=vc4-kms-v3d

    # Configure touchscreen transformation matrix
    - name: Add touchscreen transformation matrix
      copy:
        content: |
          Section "InputClass"
              Identifier "Touchscreen Calibration"
              MatchIsTouchscreen "on"
              Option "TransformationMatrix" "1 0 0 0 -1 1 0 0 1"
          EndSection
        dest: /etc/X11/xorg.conf.d/99-touchscreen-calibration.conf
        mode: '0644'

    # Ensure the kiosk user exists
    - name: Create kiosk user
      user:
        name: kiosk
        state: present
        shell: /bin/bash
        home: /home/kiosk
        create_home: true

    # Install Plymouth
    - name: Install Plymouth
      apt:
        name: plymouth
        state: present
        update_cache: true

    # Create directory for custom Plymouth theme
    - name: Create directory for custom Plymouth theme
      file:
        path: /usr/share/plymouth/themes/custom-splash
        state: directory
        mode: '0755'

    # Copy splash.png to Plymouth theme directory
    - name: Copy splash.png to Plymouth theme directory
      copy:
        src: /home/nps/projects/laser-enclosure/assets/splash.png
        dest: /usr/share/plymouth/themes/custom-splash/splash.png
        mode: '0644'

    # Create Plymouth theme file
    - name: Create Plymouth theme file
      copy:
        dest: /usr/share/plymouth/themes/custom-splash/custom-splash.plymouth
        mode: '0644'
        content: |
          [Plymouth Theme]
          Name=Custom Splash
          Description=Custom boot splash screen
          ModuleName=script

          [script]
          ImageDir=/usr/share/plymouth/themes/custom-splash
          ScriptFile=/usr/share/plymouth/themes/custom-splash/custom-splash.script

    # Create Plymouth script file
    - name: Create Plymouth script file
      copy:
        dest: /usr/share/plymouth/themes/custom-splash/custom-splash.script
        mode: '0644'
        content: |
          # Plymouth script for custom splash screen
          image_background = Image("/usr/share/plymouth/themes/custom-splash/splash.png");
          image_background.SetBackground();

    # Set Plymouth theme to custom-splash
    - name: Set Plymouth theme to custom-splash
      command: plymouth-set-default-theme -R custom-splash

    # Enable and start watchdog service
    - name: Enable and start watchdog service
      systemd:
        name: watchdog
        enabled: yes
        state: started

    - name: Ensure 'splash' is present in cmdline.txt
      lineinfile:
        path: /boot/cmdline.txt
        regexp: '\bsplash\b'
        line: "{{ lookup('file', '/boot/cmdline.txt') | regex_replace('(\\s)?splash', '') | trim }} splash"
        backrefs: no
